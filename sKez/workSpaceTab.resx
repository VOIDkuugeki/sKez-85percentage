<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="editIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="editIcon.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        BgAAAk1TRnQBSQFMAgEBAwEAAZgBAgGYAQIBFAEAARQBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFQ
        AwABFAMAAQEBAAEgBgABGRIAA1MBqgNGAYADHgErpAADbwHzLP8DVwGyXAADRgF/AyEB+wMhAfsDXwHV
        A0YBgAMeASuUAANaAcI0/wMbASVYAAMeASoDIQH7Ax4BKwM8AWYDWwHFAwAB/wNSAaADAgEDVAAIATAA
        DP8MAAz/DAAM/1wAA10B1AM9AWcDDAEPA1wByANbAcUDYgHhA1EBogMCAQNQAANQAZwDUAGcMAAI/wMg
        AS4MAAz/DAAM/1wAA0YBfwNbAcUDXAHIA1kBwwMKAQ0DGQEiA2IB4QNRAaIDAgEDTAADVgGzA1YBszAA
        CP8DIAEuDAAM/wwADP9cAAMeASoDAAH/A1sBxQMKAQ0IAAMZASIDYgHhA1EBogMCAQNIAANWAbMDVgGz
        MAAI/wMgAS4MAAz/DAAM/2AAA1IBoANiAeEDGQEiDAADGQEiA2IB4QNRAaIDAgEDRAADVgGzA1YBszAA
        CP8DIAEuDAAM/wwADP9gAAMCAQMDUQGhA2IB4QMZASIMAAMZASIDYgHhA1EBoQMCAQNAAANWAbMDVgGz
        MAAI/wMgAS4MAAz/DAAM/2QAAwIBAwNRAaEDYgHhAxkBIgwAAxkBIgNiAeEDUQGhAwIBAzwAA1YBswNW
        AbMwAAj/AyABLgwADP8MAAz/aAADAgEDA1EBoQNiAeEDGQEiDAADGQEiA2IB4QNRAaEDAgEDHAAEAQNQ
        AZwDVgGzA1YBswNWAbMDVgGzA1YBswNgAegDYAHoA1YBswNWAbMDVgGzA1YBswNWAbMDUAGcBAEUAAj/
        AyABLgwADP8MAAz/bAADAgEDA1EBoQNiAeEDGQEiDAADGQEiA2IB4QNRAaEDAgEDGAAEAQNQAZwDVgGz
        A1YBswNWAbMDVgGzA1YBswNgAegDYAHoA1YBswNWAbMDVgGzA1YBswNWAbMDUAGcBAEUAAj/AyABLgwA
        DP8MAAz/cAADAgEDA1EBoQNiAeEDGQEiDAADGQEiA2IB4QNRAaEDAgEDMAADVgGzA1YBszAACP8DIAEu
        DAAM/wwADP90AAMCAQMDUQGhA2IB4QMZASIIAAMKAQ0DWQHGA1MB/gNRAaEDAgEDLAADVgGzA1YBszAA
        CP8DIAEuDAAM/wwADP94AAMCAQMDUQGhA2IB4QMZASIDCgENA1kBwwNcAcgDIgExA14B8ANRAaEDAgED
        KAADVgGzA1YBszAACP8DIAEuDAAM/wwADP98AAMCAQMDUQGhA2IB4QNZAcYDXAHIAwwBDwNGAYADXgHw
        A14B4gNRAaEDAgEDJAADVgGzA1YBsygAAwsBDgMgAS4I/wM1AVYDIAEuAyABLgMgAS4M/wMgAS4DIAEu
        AyABLgz/AyABLgQCeAADAgEDA1EBoQNTAf4DIgExA0YBgANeAfADJQE3AxkBIgNiAeEDSAGEJAADVgGz
        A1YBsyQAA0kBhkz/fAADAgEDA1EBoQNeAfADXgHwAyUBNwgAAzABTANdAewkAANQAZwDUAGcJAAEAUz/
        gAADAgEDA1EBoQNeAeIDGQEiCAADKwFBA2AB8yQACAE4AANjAd8k/5gAAwIBAwNRAaEDYgHhAzABTAMq
        AUADWwHQA08Bm2QAA10BxST/nAADAgEDA0kBhQNeAe0DYAHzA08BmwMIAQpoAANWAasDWgG/A1oBvwNa
        Ab8DWgG/A1oBvwNaAb8DWgG/A0MBdmQAAUIBTQE+BwABPgMAASgDAAFQAwABFAMAAQEBAAEBBQAB8BcA
        A/8BAAEfBP8B8AEAAXAEAAEDBP8B4AEAATAFAAL/AfkB/wHjAY4BMAQAAYABfwH/AfkB/wHjAY4BMAQA
        AYABPwH/AfkB/wHjAY4BMAQAAYYBHwH/AfkB/wHjAY4BMAQAAccBDwH/AfkB/wHjAY4BMAQAAcMBhwH/
        AfkB/wHjAY4BMAQAAeEBwwH/AfkB/wHjAY4BMAQAAfAB4QH8AQABAwHjAY4BMAQAAfgBcAH8AQABAwHj
        AY4BMAQAAfwBOAF/AfkB/wHjAY4BMAQAAf4BGAE/AfkB/wHjAY4BMAQAAf8BAAEfAfkB/wHjAY4BMAQA
        Af8BgAEPAfkB/wGABgAB/wHAAQ8B+QH/BwAB/wHgAc8B+QH/BwAB/wHwAc8B+QH/AfgBAQHwBAAB/wH4
        AQ8C/wH4AQEB8AQAAf8B/AEPAv8B/AEBAfAEAAs=
</value>
  </data>
</root>