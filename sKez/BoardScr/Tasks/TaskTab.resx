<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageBtn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageBtn.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACi
        CAAAAk1TRnQBSQFMAgEBAgEAAVABAAFQAQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQP8A/wD/AP8A/wD/AP8A/wAtAAH/A1sB0wMRARb/APUAA1sB0wMAAf8DWwHT
        AxEBFv8A8QADEQEWA1sB0wMAAf8DWwHTAxEBFiQAAwsBDv8AyQADEQEWA1sB0wMAAf8DWwHTAxEBFhwA
        AxEBFgNbAdMDSQGF/wDJAAMRARYDWwHTAwAB/wNbAdMDEQEWFAADEQEWA1sB0wMAAf8DAAH/AzgBXFAA
        AwMB/wMAAf8DAAH/AwUBBhwAAyABLgMAAf8DAAH/AwIB//8APQADEQEWA1sB0wMAAf8DWwHTAxEBFgwA
        AxEBFgNbAdMDAAH/A1UB5wMAAf8DTAHtAwwBEE8AAf8DAAH/AwAB/wMAAf8DBAEFFAADJAE0AwAB/wMA
        Af8DAAH/AwAB//8AQQADEQEWA1sB0wMAAf8DWwHTAxEBFgQAAxEBFgNbAdMDAAH/A1sB0wMRARYDWQG+
        AwAB/wNAAXFPAAH/AwAB/wMAAf8DAAH/AwAB/xAAAxoBIwMAAf8DAAH/AwAB/wMAAf8DAAH//wBFAAMR
        ARYDWwHTAwAB/wNbAdMDHwEsA1sB0wMAAf8DWwHTAxEBFgQAAzQBUwMAAf8DWgG/TAADTAGQAwAB/wMA
        Af8DAAH/AwAB/wMAAf8EAQQAAwkBCwMAAf8DAAH/AwAB/wMAAf8DAAH/AyABLf8ASQADEQEWA1sB0wMA
        Af8DFAH9AwAB/wNbAdMDEQEWCAADEgEXAwAB/wNMAe1QAANTAaoDAAH/AwAB/wMAAf8DAAH/AwAB/wMM
        ARADAAH/AwAB/wMAAf8DAAH/AwAB/wMxAU7/AFEAAx8BLAMUAf0DAAH/A1sB0wMRARYMAAMDAQQDAAH/
        Ax4B+1QAA1ABnwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMvAUn/AFEAAxEBFgNb
        AdMDAAH/A1sB0wMRARYQAAMSARgDAAH/A08B7FgAA0EBcwMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DGwEl/wBRAAMRARYDWwHTAwAB/wNbAdMDEQEWFAADLgFHAwAB/wMUAf0DSgGKAwUBBlQAA0UBfAMA
        Af8DAAH/AwAB/wMAAf8DAAH/Aw0BEf8AUQADEQEWA1sB0wMAAf8DWwHTAxEBFhgABAIDRAF4Ax4B+gMA
        Af8DXQHJAxkBI0wAAw4BEgMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf//AE0AAxEBFgNbAdMDAAH/
        A1sB0wMRARYkAAMmATgDWwHeAwAB/wNEAfEDNwFaRAADIQEvAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH//wBFAAMLAQ4DWwHTAwAB/wNVAecDEQEWLAADDAEQA1MBqQMAAf8DAAH/A1EBngMJ
        AQs4AAMkATUDAAH/AwAB/wMAAf8DAAH/AwAB/wNQAZ0DAAH/AwAB/wMAAf8DAAH/AwAB/wMEAQX/AEEA
        A0kBhQMAAf8DAAH/A1kBvgM0AVMDEgEXAwMBBAMSARgDLgFHBAIcAAM7AWUDMgH1AwAB/wNcAdcDIQEw
        MAADFgEeAwAB/wMAAf8DAAH/AwAB/wMAAf8DJwE5BAADTwGbAwAB/wMAAf8DAAH/AwAB/wMAAf8EAv8A
        QQADOAFdA0wB7QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wNEAXggAAMeASoDXAHhAwAB/wMyAfcDHwEs
        LwAB/wMAAf8DAAH/AwAB/wMAAf8DMAFKDAADUgGjAwAB/wMAAf8DAAH/AwAB/wMAAf//AEUAAwwBEANA
        AXEDWgG/A0wB7QMUAfwDTwHsAxQB/QMeAfoDJgE4HAADOAFbAxQB/AMAAf8DRAF7MwAB/wMAAf8DAAH/
        AwAB/wMwAUsUAANRAaEDAAH/AwAB/wMAAf8DAAH//wBdAANKAYoDAAH/A1sB3gMMARAUAAM4AVsDFAH8
        AwAB/wNEAXs0AAMJAf8DAAH/AwAB/wMjATMcAANQAZ0DAAH/AwAB/wMDAf//AF0AAwQBBQNdAckDAAH/
        A1MBqRAAAzgBWwMUAfwDAAH/A0QBe/8A1QADGQEjA0QB8QMAAf8DOwFlCAADOAFbAxQB/AMAAf8DRAF7
        /wDdAAM3AVoDAAH/AzIB9QMeASoDOAFbAxQB/AMAAf8DRAF7/wDlAANRAZ4DAAH/A1gB4gMUAfwDAAH/
        A0QBe/8A6QADCQELA1wB1wMAAf8DAAH/A0QBe/8A8QADIQEwAzIB9wNEAXv/APkAAx8BLP8A/wD/AP8A
        /wCxAAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAI/wgACP8IAAj/CAAI/wgA
        AfEH/wgAAfAH/wgAAfABfwHfBf8IAAH4AT8BjwX/CAAB/AEfAQcC/wGHAfAB/wgAAf4BDgEDAv8BgwHg
        Af8IAAH/AQQBAwL/AYMBwAH/CAAB/wGAASMC/wKAAf8IAAH/AcABYwL/AcABAQH/CAAB/wHgAeMC/wHg
        AQMB/wgAAf8BwQHjAv8B8AEHAf8IAAH/AYMB4AL/AfgBDwH/CAAB/wEHAeABfwH/AfABDwH/CAAB/gEP
        AfgBPwH/AeABBwH/CAAB/AEfAfwBDwH/AcABAQH/CAAB/gEAAX8BBwH/AoAB/wgAAf8BAAF/AYMB/wGB
        AcAB/wgAAf8BgAE/AYcB/wGDAeAB/wgAAf8B/gEfAQ8B/wGHAfAB/wgAAf8B/gEeAR8E/wgAAv8BDAE/
        BP8IAAL/AYABfwT/CAAC/wHABf8IAAL/AcEF/wgAAv8B4wX/CAAC/wH3Bf8IAAj/CAAI/wgACw==
</value>
  </data>
</root>